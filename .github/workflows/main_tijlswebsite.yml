# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - TijlsWebsite

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DOTNET_VERSION: '9.x'
  PUBLISH_DIR: './publish'
  ARTIFACT_NAME: 'dotnet-app'

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: "Check if AZURE_WEBAPP_NAME secret exists"
        env:
          super_secret: ${{ secrets.AZURE_WEBAPP_NAME }}
        if: ${{ env.super_secret == '' }}
        run: echo "❌ Secret AZURE_WEBAPP_NAME is missing. Go to Settings > Actions > Secrets to create it." && exit 1

      - name: "Check if AZURE_WEBAPP_PUBLISH_PROFILE secret exists"
        env:
          super_secret: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        if: ${{ env.super_secret == '' }}
        run: echo "❌ Secret AZURE_WEBAPP_PUBLISH_PROFILE is missing. Go to Settings > Actions > Secrets to create it." && exit 1

      - name: "Check if WEBAPI_PROJECT_NAME secret exists"
        env:
          super_secret: ${{ secrets.WEBAPI_PROJECT_NAME }}
        if: ${{ env.super_secret == '' }}
        run: echo "❌ Secret WEBAPI_PROJECT_NAME is missing. Go to Settings > Actions > Secrets to create it." && exit 1

  build:
    runs-on: windows-latest
    needs: check
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore ${{ secrets.WEBAPI_PROJECT_NAME }}

      - name: Build project
        run: dotnet build ${{ secrets.WEBAPI_PROJECT_NAME }} --no-restore

      - name: Run tests
        run: dotnet test ${{ secrets.WEBAPI_PROJECT_NAME }} --no-build --verbosity normal

      - name: Publish app
        run: dotnet publish ${{ secrets.WEBAPI_PROJECT_NAME }} -c Release -o ${{ env.PUBLISH_DIR }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.PUBLISH_DIR }}

  deploy:
    runs-on: windows-latest
    needs: build
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
